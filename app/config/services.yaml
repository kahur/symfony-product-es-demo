# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    es_config: {'hosts': ['%env(ES_HOST)%']}
    file_directory: '../var/files'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    KH\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # setup redis for symfony
    Redis:
        class: \Redis
        calls:
            - connect:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'

    # as we have redis in place already, let's put sessions in it to speed up things :)
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        arguments:
            - '@Redis'
    Symfony\Component\Cache\Adapter\RedisAdapter:
        class: Symfony\Component\Cache\Adapter\RedisAdapter
        arguments:
            - '@Redis'
    Symfony\Component\Cache\Adapter\RedisTagAwareAdapter:
        class: Symfony\Component\Cache\Adapter\RedisTagAwareAdapter
        arguments:
            - '@Redis'
    # setup es client
    Elastic\Elasticsearch\ClientBuilder: ~

    Elastic\Elasticsearch\Client:
        factory: [ '@Elastic\Elasticsearch\ClientBuilder', fromConfig ]
        arguments: [ '%es_config%' ]

    KH\Service\File\FileService:
        arguments:
            $fileDir: '%file_directory%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
